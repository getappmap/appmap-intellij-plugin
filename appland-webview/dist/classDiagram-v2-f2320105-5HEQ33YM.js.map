{"version":3,"sources":["../node_modules/mermaid/dist/classDiagram-v2-f2320105.js"],"names":[],"mappings":"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","file":"classDiagram-v2-f2320105-5HEQ33YM.js","sourcesContent":["import { p as parser, d as db, s as styles } from \"./styles-9a916d00.js\";\nimport { select, curveLinear } from \"d3\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { l as log, c as getConfig, u as utils, o as setupGraphViewbox, k as getStylesFromArray, n as interpolateToCurve, e as common } from \"./mermaid-b5860b54.js\";\nimport { r as render } from \"./index-3862675e.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nconst sanitizeText = (txt) => common.sanitizeText(txt, getConfig());\nlet conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n  curve: void 0\n};\nconst addNamespaces = function(namespaces, g, _id, diagObj) {\n  const keys = Object.keys(namespaces);\n  log.info(\"keys:\", keys);\n  log.info(namespaces);\n  keys.forEach(function(id) {\n    var _a, _b;\n    const vertex = namespaces[id];\n    const shape = \"rect\";\n    const node = {\n      shape,\n      id: vertex.id,\n      domId: vertex.domId,\n      labelText: sanitizeText(vertex.id),\n      labelStyle: \"\",\n      style: \"fill: none; stroke: black\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    addClasses(vertex.classes, g, _id, diagObj, vertex.id);\n    log.info(\"setNode\", node);\n  });\n};\nconst addClasses = function(classes, g, _id, diagObj, parent) {\n  const keys = Object.keys(classes);\n  log.info(\"keys:\", keys);\n  log.info(classes);\n  keys.filter((id) => classes[id].parent == parent).forEach(function(id) {\n    var _a, _b;\n    const vertex = classes[id];\n    const cssClassStr = vertex.cssClasses.join(\" \");\n    const styles2 = getStylesFromArray(vertex.styles);\n    const vertexText = vertex.label ?? vertex.id;\n    const radius = 0;\n    const shape = \"class_box\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssClassStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      tooltip: diagObj.db.getTooltip(vertex.id, parent) || \"\",\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    if (parent) {\n      g.setParent(vertex.id, parent);\n    }\n    log.info(\"setNode\", node);\n  });\n};\nconst addNotes = function(notes, g, startEdgeId, classes) {\n  log.info(notes);\n  notes.forEach(function(note, i) {\n    var _a, _b;\n    const vertex = note;\n    const cssNoteStr = \"\";\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.text;\n    const radius = 0;\n    const shape = \"note\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      noteData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssNoteStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.id,\n      tooltip: \"\",\n      type: \"note\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    log.info(\"setNode\", node);\n    if (!vertex.class || !(vertex.class in classes)) {\n      return;\n    }\n    const edgeId = startEdgeId + i;\n    const edgeData = {\n      id: `edgeNote${edgeId}`,\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: \"dotted\",\n      // Set link type for rendering\n      arrowhead: \"none\",\n      //Set edge extra labels\n      startLabelRight: \"\",\n      endLabelLeft: \"\",\n      //Set relation arrow types\n      arrowTypeStart: \"none\",\n      arrowTypeEnd: \"none\",\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf.curve, curveLinear)\n    };\n    g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n  });\n};\nconst addRelations = function(relations, g) {\n  const conf2 = getConfig().flowchart;\n  let cnt = 0;\n  relations.forEach(function(edge) {\n    var _a;\n    cnt++;\n    const edgeData = {\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n      id: `id_${edge.id1}_${edge.id2}_${cnt}`,\n      // Set link type for rendering\n      arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n      //Set edge extra labels\n      startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n      endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n      //Set relation arrow types\n      arrowTypeStart: getArrowMarker(edge.relation.type1),\n      arrowTypeEnd: getArrowMarker(edge.relation.type2),\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf2 == null ? void 0 : conf2.curve, curveLinear)\n    };\n    log.info(edgeData, edge);\n    if (edge.style !== void 0) {\n      const styles2 = getStylesFromArray(edge.style);\n      edgeData.style = styles2.style;\n      edgeData.labelStyle = styles2.labelStyle;\n    }\n    edge.text = edge.title;\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (((_a = getConfig().flowchart) == null ? void 0 : _a.htmlLabels) ?? getConfig().htmlLabels) {\n        edgeData.labelType = \"html\";\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n};\nconst setConf = function(cnf) {\n  conf = {\n    ...conf,\n    ...cnf\n  };\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing class - \", id);\n  const conf2 = getConfig().flowchart ?? getConfig().class;\n  const securityLevel = getConfig().securityLevel;\n  log.info(\"config:\", conf2);\n  const nodeSpacing = (conf2 == null ? void 0 : conf2.nodeSpacing) ?? 50;\n  const rankSpacing = (conf2 == null ? void 0 : conf2.rankSpacing) ?? 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: diagObj.db.getDirection(),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const namespaces = diagObj.db.getNamespaces();\n  const classes = diagObj.db.getClasses();\n  const relations = diagObj.db.getRelations();\n  const notes = diagObj.db.getNotes();\n  log.info(relations);\n  addNamespaces(namespaces, g, id, diagObj);\n  addClasses(classes, g, id, diagObj);\n  addRelations(relations, g);\n  addNotes(notes, g, relations.length + 1, classes);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(\n    element,\n    g,\n    [\"aggregation\", \"extension\", \"composition\", \"dependency\", \"lollipop\"],\n    \"classDiagram\",\n    id\n  );\n  utils.insertTitle(svg, \"classTitleText\", (conf2 == null ? void 0 : conf2.titleTopMargin) ?? 5, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2 == null ? void 0 : conf2.diagramPadding, conf2 == null ? void 0 : conf2.useMaxWidth);\n  if (!(conf2 == null ? void 0 : conf2.htmlLabels)) {\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n};\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = \"aggregation\";\n      break;\n    case 1:\n      marker = \"extension\";\n      break;\n    case 2:\n      marker = \"composition\";\n      break;\n    case 3:\n      marker = \"dependency\";\n      break;\n    case 4:\n      marker = \"lollipop\";\n      break;\n    default:\n      marker = \"none\";\n  }\n  return marker;\n}\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"]}
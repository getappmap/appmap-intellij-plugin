{"version":3,"sources":["../findings.js"],"names":[],"mappings":";;;;;;;AAAA,iBAAA,EAAA,CAAA;AAMA,SAAS,YAAe,GAAA;AACtB,EAAM,MAAA,QAAA,GAAW,IAAI,gBAAA,CAAiB,oBAAM,CAAA,CAAA;AAE5C,EAAA,QAAA,CAAS,GAAG,MAAQ,EAAA,CAAC,EAAC,IAAM,EAAA,IAAA,EAAM,UAAc,KAAA;AAC9C,IAAA,OAAA,CAAQ,IAAI,oBAAuB,GAAA,IAAA,GAAO,OAAO,IAAK,CAAA,SAAA,CAAU,QAAQ,CAAC,CAAA,CAAA;AAEzE,IAAI,IAAA,SAAA,CAAA;AACJ,IAAA,IAAI,SAAS,kBAAoB,EAAA;AAC/B,MAAY,SAAA,GAAA,EAAA,CAAA;AAAA,KACd,MAAA,IAAW,SAAS,iBAAmB,EAAA;AACrC,MAAY,SAAA,GAAA,EAAA,CAAA;AAAA,KACP,MAAA;AACL,MAAM,MAAA,IAAI,KAAM,CAAA,qBAAA,GAAwB,IAAI,CAAA,CAAA;AAAA,KAC9C;AAEA,IAAM,MAAA,GAAA,GAAM,IAAI,mBAAI,CAAA;AAAA,MAClB,EAAI,EAAA,MAAA;AAAA,MACJ,OAAO,CAAG,EAAA;AACR,QAAA,OAAO,EAAE,SAAW,EAAA;AAAA,UAClB,GAAK,EAAA,IAAA;AAAA,UACL,KAAO,EAAA,QAAA;AAAA,SACR,CAAA,CAAA;AAAA,OACH;AAAA,MACA,IAAO,GAAA;AACL,QAAO,OAAA,QAAA,CAAA;AAAA,OACT;AAAA,KACD,CAAA,CAAA;AAGD,IAAI,GAAA,CAAA,GAAA,CAAI,qBAAqB,MAAM,oBAAA,CAAO,YAAY,EAAC,OAAA,EAAS,mBAAmB,EAAC,CAAC,CAAA,CAAA;AACrF,IAAI,GAAA,CAAA,GAAA,CAAI,mBAAqB,EAAA,CAAC,IAAS,KAAA,oBAAA,CAAO,WAAY,CAAA,EAAC,OAAS,EAAA,mBAAA,EAAqB,IAAI,EAAC,CAAC,CAAA,CAAA;AAG/F,IAAI,GAAA,CAAA,GAAA,CAAI,qBAAuB,EAAA,CAAC,QAAa,KAAA,oBAAA,CAAO,WAAY,CAAA,EAAC,OAAS,EAAA,qBAAA,EAAuB,QAAQ,EAAC,CAAC,CAAA,CAAA;AAC3G,IAAA,GAAA,CAAI,GAAI,CAAA,UAAA,EAAY,CAAC,OAAA,EAAS,GAAQ,KAAA,oBAAA,CAAO,WAAY,CAAA,EAAC,OAAS,EAAA,UAAA,EAAY,OAAS,EAAA,GAAA,EAAI,CAAC,CAAA,CAAA;AAC7F,IAAI,GAAA,CAAA,GAAA,CAAI,0BAA0B,MAAM,oBAAA,CAAO,YAAY,EAAC,OAAA,EAAS,wBAAwB,EAAC,CAAC,CAAA,CAAA;AAAA,GAChG,CAAA,CAAA;AAED,EAAA,oBAAA,CAAO,WAAY,CAAA,EAAC,OAAS,EAAA,OAAA,EAAQ,CAAA,CAAA;AACvC,CAAA;AAEA,mBAAA,CAAI,IAAI,EAAM,CAAA,CAAA;AACd,YAAa,EAAA","file":"findings.js","sourcesContent":["import Vue from 'vue';\nimport {default as plugin, VAnalysisFindings, VFindingDetails} from '@appland/components';\nimport '@appland/diagrams/dist/style.css';\nimport MessagePublisher from 'messagePublisher';\nimport vscode from 'vsCodeBridge';\n\nfunction mountWebview() {\n  const messages = new MessagePublisher(vscode);\n\n  messages.on('init', ({page, data: initData}) => {\n    console.log(\"received js init: \" + page + \", \" + JSON.stringify(initData));\n\n    let component;\n    if (page === \"finding-overview\") {\n      component = VAnalysisFindings\n    } else if (page === \"finding-details\") {\n      component = VFindingDetails;\n    } else {\n      throw new Error(\"unknown page type: \" + page);\n    }\n\n    const app = new Vue({\n      el: '#app',\n      render(h) {\n        return h(component, {\n          ref: 'ui',\n          props: initData,\n        });\n      },\n      data() {\n        return initData;\n      }\n    });\n\n    // findings overview\n    app.$on('open-problems-tab', () => vscode.postMessage({command: 'open-problems-tab'}));\n    app.$on('open-finding-info', (hash) => vscode.postMessage({command: 'open-finding-info', hash}));\n\n    // finding details\n    app.$on('open-in-source-code', (location) => vscode.postMessage({command: 'open-in-source-code', location}));\n    app.$on('open-map', (mapFile, uri) => vscode.postMessage({command: 'open-map', mapFile, uri}));\n    app.$on('open-findings-overview', () => vscode.postMessage({command: 'open-findings-overview'}));\n  });\n\n  vscode.postMessage({command: 'ready'});\n}\n\nVue.use(plugin);\nmountWebview();"]}
{"version":3,"sources":["../signin.js"],"names":[],"mappings":";;;;;;;AAAA,iBAAA,EAAA,CAAA;AAMA,SAAS,YAAe,GAAA;AACtB,EAAM,MAAA,QAAA,GAAW,IAAI,gBAAA,CAAiB,oBAAM,CAAA,CAAA;AAE5C,EAAA,QAAA,CAAS,GAAG,MAAQ,EAAA,CAAC,EAAE,IAAM,EAAA,IAAA,EAAM,UAAe,KAAA;AAChD,IAAM,MAAA,GAAA,GAAM,IAAI,mBAAI,CAAA;AAAA,MAClB,EAAI,EAAA,MAAA;AAAA,MACJ,OAAO,CAAG,EAAA;AACR,QAAA,OAAO,EAAE,EAAgB,EAAA;AAAA,UACvB,GAAK,EAAA,IAAA;AAAA,UACL,KAAO,EAAA,QAAA;AAAA,SACR,CAAA,CAAA;AAAA,OACH;AAAA,MACA,IAAO,GAAA;AACL,QAAO,OAAA,QAAA,CAAA;AAAA,OACT;AAAA,MACA,OAAU,GAAA;AACR,QAAI,IAAA,UAAA,GAAa,QAAS,CAAA,aAAA,CAAc,cAAc,CAAA,CAAA;AACtD,QAAA,IAAI,UAAY,EAAA;AACd,UAAA,IAAI,cAAiB,GAAA,KAAA,CAAA;AACrB,UAAW,UAAA,CAAA,gBAAA,CAAiB,SAAS,MAAM;AACzC,YAAA,IAAI,CAAC,cAAgB,EAAA;AACnB,cAAiB,cAAA,GAAA,IAAA,CAAA;AACjB,cAAW,UAAA,CAAA,MAAM,qBAAO,WAAY,CAAA,EAAE,SAAS,qBAAsB,EAAC,GAAG,GAAG,CAAA,CAAA;AAAA,aAC9E;AAAA,WACD,CAAA,CAAA;AAAA,SACH;AAAA,OACF;AAAA,KACD,CAAA,CAAA;AAED,IAAI,GAAA,CAAA,GAAA,CAAI,WAAW,MAAM;AACvB,MAAA,oBAAA,CAAO,WAAY,CAAA,EAAE,OAAS,EAAA,SAAA,EAAW,CAAA,CAAA;AAAA,KAC1C,CAAA,CAAA;AACD,IAAI,GAAA,CAAA,GAAA,CAAI,oBAAsB,EAAA,CAAC,QAAa,KAAA;AAC1C,MAAA,oBAAA,CAAO,WAAY,CAAA,EAAE,OAAS,EAAA,oBAAA,EAAsB,UAAU,CAAA,CAAA;AAAA,KAC/D,CAAA,CAAA;AACD,IAAI,GAAA,CAAA,GAAA,CAAI,UAAY,EAAA,CAAC,MAAW,KAAA;AAC9B,MAAA,oBAAA,CAAO,WAAY,CAAA,EAAE,OAAS,EAAA,UAAA,EAAY,QAAQ,CAAA,CAAA;AAAA,KACnD,CAAA,CAAA;AAAA,GACF,CAAA,CAAA;AAED,EAAA,oBAAA,CAAO,WAAY,CAAA,EAAE,OAAS,EAAA,OAAA,EAAS,CAAA,CAAA;AACzC,CAAA;AAEA,mBAAA,CAAI,IAAI,EAAM,CAAA,CAAA;AACd,YAAa,EAAA","file":"signin.js","sourcesContent":["import Vue from \"vue\";\nimport { default as plugin, VSidebarSignIn } from \"@appland/components\"; // eslint-disable-line import/no-named-default\nimport \"@appland/diagrams/dist/style.css\";\nimport MessagePublisher from \"messagePublisher\";\nimport vscode from \"vsCodeBridge\";\n\nfunction mountWebview() {\n  const messages = new MessagePublisher(vscode);\n\n  messages.on(\"init\", ({ page, data: initData }) => {\n    const app = new Vue({\n      el: \"#app\",\n      render(h) {\n        return h(VSidebarSignIn, {\n          ref: \"ui\",\n          props: initData,\n        });\n      },\n      data() {\n        return initData;\n      },\n      mounted() {\n        let emailInput = document.querySelector(\"#email-input\");\n        if (emailInput) {\n          let focusEventSent = false;\n          emailInput.addEventListener(\"focus\", () => {\n            if (!focusEventSent) {\n              focusEventSent = true;\n              setTimeout(() => vscode.postMessage({ command: \"email-input-focused\" }), 250);\n            }\n          });\n        }\n      },\n    });\n\n    app.$on(\"sign-in\", () => {\n      vscode.postMessage({ command: \"sign-in\" });\n    });\n    app.$on(\"click-sign-in-link\", (linkType) => {\n      vscode.postMessage({ command: \"click-sign-in-link\", linkType });\n    });\n    app.$on(\"activate\", (apiKey) => {\n      vscode.postMessage({ command: \"activate\", apiKey });\n    });\n  });\n\n  vscode.postMessage({ command: \"ready\" });\n}\n\nVue.use(plugin);\nmountWebview();\n"]}
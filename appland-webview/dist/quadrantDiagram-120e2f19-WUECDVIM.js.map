{"version":3,"sources":["../node_modules/mermaid/dist/quadrantDiagram-120e2f19.js"],"names":["clear"],"mappings":";;;;AAAA,iBAAA,EAAA,CAAA;AAEO,OAAA,CAAA,YAAA,EAAA,EAAA,CAAA,EAAA;AACA,OAAA,CAAA,iBAAA,EAAA,EAAA,CAAA,EAAA;AACA,OAAA,CAAA,aAAA,EAAA,EAAA,CAAA,EAAA;AACA,OAAA,CAAA,cAAA,EAAA,EAAA,CAAA,EAAA;AAMP,IAAI,SAAS,WAAW;AACtB,EAAA,IAAI,CAAI,GAAA,SAAS,CAAG,EAAA,CAAA,EAAG,IAAI,CAAG,EAAA;AAC5B,IAAA,KAAK,EAAK,GAAA,EAAA,IAAM,EAAC,EAAG,CAAI,GAAA,CAAA,CAAE,MAAQ,EAAA,CAAA,EAAA,EAAK,EAAG,CAAA,CAAA,CAAE,CAAC,CAAC,CAAI,GAAA,CAAA;AAChD,MAAA,CAAA;AACF,IAAO,OAAA,EAAA,CAAA;AAAA,GACN,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,CAAC,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,CAAC,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,CAAA,EAAG,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,GAAG,CAAG,EAAA,CAAA,EAAG,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAI,EAAA,EAAA,EAAI,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,EAAI,EAAA,EAAA,EAAI,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,CAAC,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,EAAA,EAAE,CAAG,EAAA,GAAA,GAAM,CAAC,CAAA,EAAG,EAAE,CAAA,EAAG,GAAM,GAAA,CAAC,CAAG,E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","file":"quadrantDiagram-120e2f19-WUECDVIM.js","sourcesContent":["import { E as getThemeVariables, B as defaultConfig, l as log, s as setAccTitle, g as getAccTitle, q as setDiagramTitle, t as getDiagramTitle, a as getAccDescription, b as setAccDescription, c as getConfig, v as clear$1, d as sanitizeText, i as configureSvgSize } from \"./mermaid-b5860b54.js\";\nimport { scaleLinear, select } from \"d3\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 3], $V1 = [1, 4], $V2 = [1, 5], $V3 = [1, 6], $V4 = [1, 7], $V5 = [1, 5, 13, 15, 17, 19, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], $V6 = [1, 5, 6, 13, 15, 17, 19, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], $V7 = [32, 33, 34], $V8 = [2, 7], $V9 = [1, 13], $Va = [1, 17], $Vb = [1, 18], $Vc = [1, 19], $Vd = [1, 20], $Ve = [1, 21], $Vf = [1, 22], $Vg = [1, 23], $Vh = [1, 24], $Vi = [1, 25], $Vj = [1, 26], $Vk = [1, 27], $Vl = [1, 30], $Vm = [1, 31], $Vn = [1, 32], $Vo = [1, 33], $Vp = [1, 34], $Vq = [1, 35], $Vr = [1, 36], $Vs = [1, 37], $Vt = [1, 38], $Vu = [1, 39], $Vv = [1, 40], $Vw = [1, 41], $Vx = [1, 42], $Vy = [1, 57], $Vz = [1, 58], $VA = [5, 22, 26, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"eol\": 4, \"SPACE\": 5, \"QUADRANT\": 6, \"document\": 7, \"line\": 8, \"statement\": 9, \"axisDetails\": 10, \"quadrantDetails\": 11, \"points\": 12, \"title\": 13, \"title_value\": 14, \"acc_title\": 15, \"acc_title_value\": 16, \"acc_descr\": 17, \"acc_descr_value\": 18, \"acc_descr_multiline_value\": 19, \"section\": 20, \"text\": 21, \"point_start\": 22, \"point_x\": 23, \"point_y\": 24, \"X-AXIS\": 25, \"AXIS-TEXT-DELIMITER\": 26, \"Y-AXIS\": 27, \"QUADRANT_1\": 28, \"QUADRANT_2\": 29, \"QUADRANT_3\": 30, \"QUADRANT_4\": 31, \"NEWLINE\": 32, \"SEMI\": 33, \"EOF\": 34, \"alphaNumToken\": 35, \"textNoTagsToken\": 36, \"STR\": 37, \"MD_STR\": 38, \"alphaNum\": 39, \"PUNCTUATION\": 40, \"AMP\": 41, \"NUM\": 42, \"ALPHA\": 43, \"COMMA\": 44, \"PLUS\": 45, \"EQUALS\": 46, \"MULT\": 47, \"DOT\": 48, \"BRKT\": 49, \"UNDERSCORE\": 50, \"MINUS\": 51, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 5: \"SPACE\", 6: \"QUADRANT\", 13: \"title\", 14: \"title_value\", 15: \"acc_title\", 16: \"acc_title_value\", 17: \"acc_descr\", 18: \"acc_descr_value\", 19: \"acc_descr_multiline_value\", 20: \"section\", 22: \"point_start\", 23: \"point_x\", 24: \"point_y\", 25: \"X-AXIS\", 26: \"AXIS-TEXT-DELIMITER\", 27: \"Y-AXIS\", 28: \"QUADRANT_1\", 29: \"QUADRANT_2\", 30: \"QUADRANT_3\", 31: \"QUADRANT_4\", 32: \"NEWLINE\", 33: \"SEMI\", 34: \"EOF\", 37: \"STR\", 38: \"MD_STR\", 40: \"PUNCTUATION\", 41: \"AMP\", 42: \"NUM\", 43: \"ALPHA\", 44: \"COMMA\", 45: \"PLUS\", 46: \"EQUALS\", 47: \"MULT\", 48: \"DOT\", 49: \"BRKT\", 50: \"UNDERSCORE\", 51: \"MINUS\" },\n    productions_: [0, [3, 2], [3, 2], [3, 2], [7, 0], [7, 2], [8, 2], [9, 0], [9, 2], [9, 1], [9, 1], [9, 1], [9, 2], [9, 2], [9, 2], [9, 1], [9, 1], [12, 4], [10, 4], [10, 3], [10, 2], [10, 4], [10, 3], [10, 2], [11, 2], [11, 2], [11, 2], [11, 2], [4, 1], [4, 1], [4, 1], [21, 1], [21, 2], [21, 1], [21, 1], [39, 1], [39, 2], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [36, 1], [36, 1], [36, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 12:\n          this.$ = $$[$0].trim();\n          yy.setDiagramTitle(this.$);\n          break;\n        case 13:\n          this.$ = $$[$0].trim();\n          yy.setAccTitle(this.$);\n          break;\n        case 14:\n        case 15:\n          this.$ = $$[$0].trim();\n          yy.setAccDescription(this.$);\n          break;\n        case 16:\n          yy.addSection($$[$0].substr(8));\n          this.$ = $$[$0].substr(8);\n          break;\n        case 17:\n          yy.addPoint($$[$0 - 3], $$[$0 - 1], $$[$0]);\n          break;\n        case 18:\n          yy.setXAxisLeftText($$[$0 - 2]);\n          yy.setXAxisRightText($$[$0]);\n          break;\n        case 19:\n          $$[$0 - 1].text += \" ⟶ \";\n          yy.setXAxisLeftText($$[$0 - 1]);\n          break;\n        case 20:\n          yy.setXAxisLeftText($$[$0]);\n          break;\n        case 21:\n          yy.setYAxisBottomText($$[$0 - 2]);\n          yy.setYAxisTopText($$[$0]);\n          break;\n        case 22:\n          $$[$0 - 1].text += \" ⟶ \";\n          yy.setYAxisBottomText($$[$0 - 1]);\n          break;\n        case 23:\n          yy.setYAxisBottomText($$[$0]);\n          break;\n        case 24:\n          yy.setQuadrant1Text($$[$0]);\n          break;\n        case 25:\n          yy.setQuadrant2Text($$[$0]);\n          break;\n        case 26:\n          yy.setQuadrant3Text($$[$0]);\n          break;\n        case 27:\n          yy.setQuadrant4Text($$[$0]);\n          break;\n        case 31:\n          this.$ = { text: $$[$0], type: \"text\" };\n          break;\n        case 32:\n          this.$ = { text: $$[$0 - 1].text + \"\" + $$[$0], type: $$[$0 - 1].type };\n          break;\n        case 33:\n          this.$ = { text: $$[$0], type: \"text\" };\n          break;\n        case 34:\n          this.$ = { text: $$[$0], type: \"markdown\" };\n          break;\n        case 35:\n          this.$ = $$[$0];\n          break;\n        case 36:\n          this.$ = $$[$0 - 1] + \"\" + $$[$0];\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: 2, 5: $V0, 6: $V1, 32: $V2, 33: $V3, 34: $V4 }, { 1: [3] }, { 3: 8, 4: 2, 5: $V0, 6: $V1, 32: $V2, 33: $V3, 34: $V4 }, { 3: 9, 4: 2, 5: $V0, 6: $V1, 32: $V2, 33: $V3, 34: $V4 }, o($V5, [2, 4], { 7: 10 }), o($V6, [2, 28]), o($V6, [2, 29]), o($V6, [2, 30]), { 1: [2, 1] }, { 1: [2, 2] }, o($V7, $V8, { 8: 11, 9: 12, 10: 14, 11: 15, 12: 16, 21: 28, 35: 29, 1: [2, 3], 5: $V9, 13: $Va, 15: $Vb, 17: $Vc, 19: $Vd, 20: $Ve, 25: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj, 31: $Vk, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }), o($V5, [2, 5]), { 4: 43, 32: $V2, 33: $V3, 34: $V4 }, o($V7, $V8, { 10: 14, 11: 15, 12: 16, 21: 28, 35: 29, 9: 44, 5: $V9, 13: $Va, 15: $Vb, 17: $Vc, 19: $Vd, 20: $Ve, 25: $Vf, 27: $Vg, 28: $Vh, 29: $Vi, 30: $Vj, 31: $Vk, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }), o($V7, [2, 9]), o($V7, [2, 10]), o($V7, [2, 11]), { 14: [1, 45] }, { 16: [1, 46] }, { 18: [1, 47] }, o($V7, [2, 15]), o($V7, [2, 16]), { 21: 48, 35: 29, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }, { 21: 49, 35: 29, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }, { 21: 50, 35: 29, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }, { 21: 51, 35: 29, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }, { 21: 52, 35: 29, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }, { 21: 53, 35: 29, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }, { 5: $Vy, 22: [1, 54], 35: 56, 36: 55, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }, o($VA, [2, 31]), o($VA, [2, 33]), o($VA, [2, 34]), o($VA, [2, 37]), o($VA, [2, 38]), o($VA, [2, 39]), o($VA, [2, 40]), o($VA, [2, 41]), o($VA, [2, 42]), o($VA, [2, 43]), o($VA, [2, 44]), o($VA, [2, 45]), o($VA, [2, 46]), o($VA, [2, 47]), o($V5, [2, 6]), o($V7, [2, 8]), o($V7, [2, 12]), o($V7, [2, 13]), o($V7, [2, 14]), o($V7, [2, 20], { 36: 55, 35: 56, 5: $Vy, 26: [1, 59], 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }), o($V7, [2, 23], { 36: 55, 35: 56, 5: $Vy, 26: [1, 60], 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }), o($V7, [2, 24], { 36: 55, 35: 56, 5: $Vy, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }), o($V7, [2, 25], { 36: 55, 35: 56, 5: $Vy, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }), o($V7, [2, 26], { 36: 55, 35: 56, 5: $Vy, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }), o($V7, [2, 27], { 36: 55, 35: 56, 5: $Vy, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }), { 23: [1, 61] }, o($VA, [2, 32]), o($VA, [2, 48]), o($VA, [2, 49]), o($VA, [2, 50]), o($V7, [2, 19], { 35: 29, 21: 62, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }), o($V7, [2, 22], { 35: 29, 21: 63, 37: $Vl, 38: $Vm, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx }), { 24: [1, 64] }, o($V7, [2, 18], { 36: 55, 35: 56, 5: $Vy, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }), o($V7, [2, 21], { 36: 55, 35: 56, 5: $Vy, 40: $Vn, 41: $Vo, 42: $Vp, 43: $Vq, 44: $Vr, 45: $Vs, 46: $Vt, 47: $Vu, 48: $Vv, 49: $Vw, 50: $Vx, 51: $Vz }), o($V7, [2, 17])],\n    defaultActions: { 8: [2, 1], 9: [2, 2] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            break;\n          case 1:\n            break;\n          case 2:\n            return 32;\n          case 3:\n            break;\n          case 4:\n            this.begin(\"title\");\n            return 13;\n          case 5:\n            this.popState();\n            return \"title_value\";\n          case 6:\n            this.begin(\"acc_title\");\n            return 15;\n          case 7:\n            this.popState();\n            return \"acc_title_value\";\n          case 8:\n            this.begin(\"acc_descr\");\n            return 17;\n          case 9:\n            this.popState();\n            return \"acc_descr_value\";\n          case 10:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 11:\n            this.popState();\n            break;\n          case 12:\n            return \"acc_descr_multiline_value\";\n          case 13:\n            return 25;\n          case 14:\n            return 27;\n          case 15:\n            return 26;\n          case 16:\n            return 28;\n          case 17:\n            return 29;\n          case 18:\n            return 30;\n          case 19:\n            return 31;\n          case 20:\n            this.begin(\"md_string\");\n            break;\n          case 21:\n            return \"MD_STR\";\n          case 22:\n            this.popState();\n            break;\n          case 23:\n            this.begin(\"string\");\n            break;\n          case 24:\n            this.popState();\n            break;\n          case 25:\n            return \"STR\";\n          case 26:\n            this.begin(\"point_start\");\n            return 22;\n          case 27:\n            this.begin(\"point_x\");\n            return 23;\n          case 28:\n            this.popState();\n            break;\n          case 29:\n            this.popState();\n            this.begin(\"point_y\");\n            break;\n          case 30:\n            this.popState();\n            return 24;\n          case 31:\n            return 6;\n          case 32:\n            return 43;\n          case 33:\n            return \"COLON\";\n          case 34:\n            return 45;\n          case 35:\n            return 44;\n          case 36:\n            return 46;\n          case 37:\n            return 46;\n          case 38:\n            return 47;\n          case 39:\n            return 49;\n          case 40:\n            return 50;\n          case 41:\n            return 48;\n          case 42:\n            return 41;\n          case 43:\n            return 51;\n          case 44:\n            return 42;\n          case 45:\n            return 5;\n          case 46:\n            return 33;\n          case 47:\n            return 40;\n          case 48:\n            return 34;\n        }\n      },\n      rules: [/^(?:%%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n\\r]+)/i, /^(?:%%[^\\n]*)/i, /^(?:title\\b)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?: *x-axis *)/i, /^(?: *y-axis *)/i, /^(?: *--+> *)/i, /^(?: *quadrant-1 *)/i, /^(?: *quadrant-2 *)/i, /^(?: *quadrant-3 *)/i, /^(?: *quadrant-4 *)/i, /^(?:[\"][`])/i, /^(?:[^`\"]+)/i, /^(?:[`][\"])/i, /^(?:[\"])/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:\\s*:\\s*\\[\\s*)/i, /^(?:(1)|(0(.\\d+)?))/i, /^(?:\\s*\\] *)/i, /^(?:\\s*,\\s*)/i, /^(?:(1)|(0(.\\d+)?))/i, /^(?: *quadrantChart *)/i, /^(?:[A-Za-z]+)/i, /^(?::)/i, /^(?:\\+)/i, /^(?:,)/i, /^(?:=)/i, /^(?:=)/i, /^(?:\\*)/i, /^(?:#)/i, /^(?:[\\_])/i, /^(?:\\.)/i, /^(?:&)/i, /^(?:-)/i, /^(?:[0-9]+)/i, /^(?:\\s)/i, /^(?:;)/i, /^(?:[!\"#$%&'*+,-.`?\\\\_/])/i, /^(?:$)/i],\n      conditions: { \"point_y\": { \"rules\": [30], \"inclusive\": false }, \"point_x\": { \"rules\": [29], \"inclusive\": false }, \"point_start\": { \"rules\": [27, 28], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [11, 12], \"inclusive\": false }, \"acc_descr\": { \"rules\": [9], \"inclusive\": false }, \"acc_title\": { \"rules\": [7], \"inclusive\": false }, \"title\": { \"rules\": [5], \"inclusive\": false }, \"md_string\": { \"rules\": [21, 22], \"inclusive\": false }, \"string\": { \"rules\": [24, 25], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nconst defaultThemeVariables = getThemeVariables();\nclass QuadrantBuilder {\n  constructor() {\n    this.config = this.getDefaultConfig();\n    this.themeConfig = this.getDefaultThemeConfig();\n    this.data = this.getDefaultData();\n  }\n  getDefaultData() {\n    return {\n      titleText: \"\",\n      quadrant1Text: \"\",\n      quadrant2Text: \"\",\n      quadrant3Text: \"\",\n      quadrant4Text: \"\",\n      xAxisLeftText: \"\",\n      xAxisRightText: \"\",\n      yAxisBottomText: \"\",\n      yAxisTopText: \"\",\n      points: []\n    };\n  }\n  getDefaultConfig() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r;\n    return {\n      showXAxis: true,\n      showYAxis: true,\n      showTitle: true,\n      chartHeight: ((_a = defaultConfig.quadrantChart) == null ? void 0 : _a.chartWidth) || 500,\n      chartWidth: ((_b = defaultConfig.quadrantChart) == null ? void 0 : _b.chartHeight) || 500,\n      titlePadding: ((_c = defaultConfig.quadrantChart) == null ? void 0 : _c.titlePadding) || 10,\n      titleFontSize: ((_d = defaultConfig.quadrantChart) == null ? void 0 : _d.titleFontSize) || 20,\n      quadrantPadding: ((_e = defaultConfig.quadrantChart) == null ? void 0 : _e.quadrantPadding) || 5,\n      xAxisLabelPadding: ((_f = defaultConfig.quadrantChart) == null ? void 0 : _f.xAxisLabelPadding) || 5,\n      yAxisLabelPadding: ((_g = defaultConfig.quadrantChart) == null ? void 0 : _g.yAxisLabelPadding) || 5,\n      xAxisLabelFontSize: ((_h = defaultConfig.quadrantChart) == null ? void 0 : _h.xAxisLabelFontSize) || 16,\n      yAxisLabelFontSize: ((_i = defaultConfig.quadrantChart) == null ? void 0 : _i.yAxisLabelFontSize) || 16,\n      quadrantLabelFontSize: ((_j = defaultConfig.quadrantChart) == null ? void 0 : _j.quadrantLabelFontSize) || 16,\n      quadrantTextTopPadding: ((_k = defaultConfig.quadrantChart) == null ? void 0 : _k.quadrantTextTopPadding) || 5,\n      pointTextPadding: ((_l = defaultConfig.quadrantChart) == null ? void 0 : _l.pointTextPadding) || 5,\n      pointLabelFontSize: ((_m = defaultConfig.quadrantChart) == null ? void 0 : _m.pointLabelFontSize) || 12,\n      pointRadius: ((_n = defaultConfig.quadrantChart) == null ? void 0 : _n.pointRadius) || 5,\n      xAxisPosition: ((_o = defaultConfig.quadrantChart) == null ? void 0 : _o.xAxisPosition) || \"top\",\n      yAxisPosition: ((_p = defaultConfig.quadrantChart) == null ? void 0 : _p.yAxisPosition) || \"left\",\n      quadrantInternalBorderStrokeWidth: ((_q = defaultConfig.quadrantChart) == null ? void 0 : _q.quadrantInternalBorderStrokeWidth) || 1,\n      quadrantExternalBorderStrokeWidth: ((_r = defaultConfig.quadrantChart) == null ? void 0 : _r.quadrantExternalBorderStrokeWidth) || 2\n    };\n  }\n  getDefaultThemeConfig() {\n    return {\n      quadrant1Fill: defaultThemeVariables.quadrant1Fill,\n      quadrant2Fill: defaultThemeVariables.quadrant2Fill,\n      quadrant3Fill: defaultThemeVariables.quadrant3Fill,\n      quadrant4Fill: defaultThemeVariables.quadrant4Fill,\n      quadrant1TextFill: defaultThemeVariables.quadrant1TextFill,\n      quadrant2TextFill: defaultThemeVariables.quadrant2TextFill,\n      quadrant3TextFill: defaultThemeVariables.quadrant3TextFill,\n      quadrant4TextFill: defaultThemeVariables.quadrant4TextFill,\n      quadrantPointFill: defaultThemeVariables.quadrantPointFill,\n      quadrantPointTextFill: defaultThemeVariables.quadrantPointTextFill,\n      quadrantXAxisTextFill: defaultThemeVariables.quadrantXAxisTextFill,\n      quadrantYAxisTextFill: defaultThemeVariables.quadrantYAxisTextFill,\n      quadrantTitleFill: defaultThemeVariables.quadrantTitleFill,\n      quadrantInternalBorderStrokeFill: defaultThemeVariables.quadrantInternalBorderStrokeFill,\n      quadrantExternalBorderStrokeFill: defaultThemeVariables.quadrantExternalBorderStrokeFill\n    };\n  }\n  clear() {\n    this.config = this.getDefaultConfig();\n    this.themeConfig = this.getDefaultThemeConfig();\n    this.data = this.getDefaultData();\n    log.info(\"clear called\");\n  }\n  setData(data) {\n    this.data = { ...this.data, ...data };\n  }\n  addPoints(points) {\n    this.data.points = [...points, ...this.data.points];\n  }\n  setConfig(config2) {\n    log.trace(\"setConfig called with: \", config2);\n    this.config = { ...this.config, ...config2 };\n  }\n  setThemeConfig(themeConfig) {\n    log.trace(\"setThemeConfig called with: \", themeConfig);\n    this.themeConfig = { ...this.themeConfig, ...themeConfig };\n  }\n  calculateSpace(xAxisPosition, showXAxis, showYAxis, showTitle) {\n    const xAxisSpaceCalculation = this.config.xAxisLabelPadding * 2 + this.config.xAxisLabelFontSize;\n    const xAxisSpace = {\n      top: xAxisPosition === \"top\" && showXAxis ? xAxisSpaceCalculation : 0,\n      bottom: xAxisPosition === \"bottom\" && showXAxis ? xAxisSpaceCalculation : 0\n    };\n    const yAxisSpaceCalculation = this.config.yAxisLabelPadding * 2 + this.config.yAxisLabelFontSize;\n    const yAxisSpace = {\n      left: this.config.yAxisPosition === \"left\" && showYAxis ? yAxisSpaceCalculation : 0,\n      right: this.config.yAxisPosition === \"right\" && showYAxis ? yAxisSpaceCalculation : 0\n    };\n    const titleSpaceCalculation = this.config.titleFontSize + this.config.titlePadding * 2;\n    const titleSpace = {\n      top: showTitle ? titleSpaceCalculation : 0\n    };\n    const quadrantLeft = this.config.quadrantPadding + yAxisSpace.left;\n    const quadrantTop = this.config.quadrantPadding + xAxisSpace.top + titleSpace.top;\n    const quadrantWidth = this.config.chartWidth - this.config.quadrantPadding * 2 - yAxisSpace.left - yAxisSpace.right;\n    const quadrantHeight = this.config.chartHeight - this.config.quadrantPadding * 2 - xAxisSpace.top - xAxisSpace.bottom - titleSpace.top;\n    const quadrantHalfWidth = quadrantWidth / 2;\n    const quadrantHalfHeight = quadrantHeight / 2;\n    const quadrantSpace = {\n      quadrantLeft,\n      quadrantTop,\n      quadrantWidth,\n      quadrantHalfWidth,\n      quadrantHeight,\n      quadrantHalfHeight\n    };\n    return {\n      xAxisSpace,\n      yAxisSpace,\n      titleSpace,\n      quadrantSpace\n    };\n  }\n  getAxisLabels(xAxisPosition, showXAxis, showYAxis, spaceData) {\n    const { quadrantSpace, titleSpace } = spaceData;\n    const {\n      quadrantHalfHeight,\n      quadrantHeight,\n      quadrantLeft,\n      quadrantHalfWidth,\n      quadrantTop,\n      quadrantWidth\n    } = quadrantSpace;\n    const drawXAxisLabelsInMiddle = Boolean(this.data.xAxisRightText);\n    const drawYAxisLabelsInMiddle = Boolean(this.data.yAxisTopText);\n    const axisLabels = [];\n    if (this.data.xAxisLeftText && showXAxis) {\n      axisLabels.push({\n        text: this.data.xAxisLeftText,\n        fill: this.themeConfig.quadrantXAxisTextFill,\n        x: quadrantLeft + (drawXAxisLabelsInMiddle ? quadrantHalfWidth / 2 : 0),\n        y: xAxisPosition === \"top\" ? this.config.xAxisLabelPadding + titleSpace.top : this.config.xAxisLabelPadding + quadrantTop + quadrantHeight + this.config.quadrantPadding,\n        fontSize: this.config.xAxisLabelFontSize,\n        verticalPos: drawXAxisLabelsInMiddle ? \"center\" : \"left\",\n        horizontalPos: \"top\",\n        rotation: 0\n      });\n    }\n    if (this.data.xAxisRightText && showXAxis) {\n      axisLabels.push({\n        text: this.data.xAxisRightText,\n        fill: this.themeConfig.quadrantXAxisTextFill,\n        x: quadrantLeft + quadrantHalfWidth + (drawXAxisLabelsInMiddle ? quadrantHalfWidth / 2 : 0),\n        y: xAxisPosition === \"top\" ? this.config.xAxisLabelPadding + titleSpace.top : this.config.xAxisLabelPadding + quadrantTop + quadrantHeight + this.config.quadrantPadding,\n        fontSize: this.config.xAxisLabelFontSize,\n        verticalPos: drawXAxisLabelsInMiddle ? \"center\" : \"left\",\n        horizontalPos: \"top\",\n        rotation: 0\n      });\n    }\n    if (this.data.yAxisBottomText && showYAxis) {\n      axisLabels.push({\n        text: this.data.yAxisBottomText,\n        fill: this.themeConfig.quadrantYAxisTextFill,\n        x: this.config.yAxisPosition === \"left\" ? this.config.yAxisLabelPadding : this.config.yAxisLabelPadding + quadrantLeft + quadrantWidth + this.config.quadrantPadding,\n        y: quadrantTop + quadrantHeight - (drawYAxisLabelsInMiddle ? quadrantHalfHeight / 2 : 0),\n        fontSize: this.config.yAxisLabelFontSize,\n        verticalPos: drawYAxisLabelsInMiddle ? \"center\" : \"left\",\n        horizontalPos: \"top\",\n        rotation: -90\n      });\n    }\n    if (this.data.yAxisTopText && showYAxis) {\n      axisLabels.push({\n        text: this.data.yAxisTopText,\n        fill: this.themeConfig.quadrantYAxisTextFill,\n        x: this.config.yAxisPosition === \"left\" ? this.config.yAxisLabelPadding : this.config.yAxisLabelPadding + quadrantLeft + quadrantWidth + this.config.quadrantPadding,\n        y: quadrantTop + quadrantHalfHeight - (drawYAxisLabelsInMiddle ? quadrantHalfHeight / 2 : 0),\n        fontSize: this.config.yAxisLabelFontSize,\n        verticalPos: drawYAxisLabelsInMiddle ? \"center\" : \"left\",\n        horizontalPos: \"top\",\n        rotation: -90\n      });\n    }\n    return axisLabels;\n  }\n  getQuadrants(spaceData) {\n    const { quadrantSpace } = spaceData;\n    const { quadrantHalfHeight, quadrantLeft, quadrantHalfWidth, quadrantTop } = quadrantSpace;\n    const quadrants = [\n      {\n        text: {\n          text: this.data.quadrant1Text,\n          fill: this.themeConfig.quadrant1TextFill,\n          x: 0,\n          y: 0,\n          fontSize: this.config.quadrantLabelFontSize,\n          verticalPos: \"center\",\n          horizontalPos: \"middle\",\n          rotation: 0\n        },\n        x: quadrantLeft + quadrantHalfWidth,\n        y: quadrantTop,\n        width: quadrantHalfWidth,\n        height: quadrantHalfHeight,\n        fill: this.themeConfig.quadrant1Fill\n      },\n      {\n        text: {\n          text: this.data.quadrant2Text,\n          fill: this.themeConfig.quadrant2TextFill,\n          x: 0,\n          y: 0,\n          fontSize: this.config.quadrantLabelFontSize,\n          verticalPos: \"center\",\n          horizontalPos: \"middle\",\n          rotation: 0\n        },\n        x: quadrantLeft,\n        y: quadrantTop,\n        width: quadrantHalfWidth,\n        height: quadrantHalfHeight,\n        fill: this.themeConfig.quadrant2Fill\n      },\n      {\n        text: {\n          text: this.data.quadrant3Text,\n          fill: this.themeConfig.quadrant3TextFill,\n          x: 0,\n          y: 0,\n          fontSize: this.config.quadrantLabelFontSize,\n          verticalPos: \"center\",\n          horizontalPos: \"middle\",\n          rotation: 0\n        },\n        x: quadrantLeft,\n        y: quadrantTop + quadrantHalfHeight,\n        width: quadrantHalfWidth,\n        height: quadrantHalfHeight,\n        fill: this.themeConfig.quadrant3Fill\n      },\n      {\n        text: {\n          text: this.data.quadrant4Text,\n          fill: this.themeConfig.quadrant4TextFill,\n          x: 0,\n          y: 0,\n          fontSize: this.config.quadrantLabelFontSize,\n          verticalPos: \"center\",\n          horizontalPos: \"middle\",\n          rotation: 0\n        },\n        x: quadrantLeft + quadrantHalfWidth,\n        y: quadrantTop + quadrantHalfHeight,\n        width: quadrantHalfWidth,\n        height: quadrantHalfHeight,\n        fill: this.themeConfig.quadrant4Fill\n      }\n    ];\n    for (const quadrant of quadrants) {\n      quadrant.text.x = quadrant.x + quadrant.width / 2;\n      if (this.data.points.length === 0) {\n        quadrant.text.y = quadrant.y + quadrant.height / 2;\n        quadrant.text.horizontalPos = \"middle\";\n      } else {\n        quadrant.text.y = quadrant.y + this.config.quadrantTextTopPadding;\n        quadrant.text.horizontalPos = \"top\";\n      }\n    }\n    return quadrants;\n  }\n  getQuadrantPoints(spaceData) {\n    const { quadrantSpace } = spaceData;\n    const { quadrantHeight, quadrantLeft, quadrantTop, quadrantWidth } = quadrantSpace;\n    const xAxis = scaleLinear().domain([0, 1]).range([quadrantLeft, quadrantWidth + quadrantLeft]);\n    const yAxis = scaleLinear().domain([0, 1]).range([quadrantHeight + quadrantTop, quadrantTop]);\n    const points = this.data.points.map((point) => {\n      const props = {\n        x: xAxis(point.x),\n        y: yAxis(point.y),\n        fill: this.themeConfig.quadrantPointFill,\n        radius: this.config.pointRadius,\n        text: {\n          text: point.text,\n          fill: this.themeConfig.quadrantPointTextFill,\n          x: xAxis(point.x),\n          y: yAxis(point.y) + this.config.pointTextPadding,\n          verticalPos: \"center\",\n          horizontalPos: \"top\",\n          fontSize: this.config.pointLabelFontSize,\n          rotation: 0\n        }\n      };\n      return props;\n    });\n    return points;\n  }\n  getBorders(spaceData) {\n    const halfExternalBorderWidth = this.config.quadrantExternalBorderStrokeWidth / 2;\n    const { quadrantSpace } = spaceData;\n    const {\n      quadrantHalfHeight,\n      quadrantHeight,\n      quadrantLeft,\n      quadrantHalfWidth,\n      quadrantTop,\n      quadrantWidth\n    } = quadrantSpace;\n    const borderLines = [\n      // top border\n      {\n        strokeFill: this.themeConfig.quadrantExternalBorderStrokeFill,\n        strokeWidth: this.config.quadrantExternalBorderStrokeWidth,\n        x1: quadrantLeft - halfExternalBorderWidth,\n        y1: quadrantTop,\n        x2: quadrantLeft + quadrantWidth + halfExternalBorderWidth,\n        y2: quadrantTop\n      },\n      // right border\n      {\n        strokeFill: this.themeConfig.quadrantExternalBorderStrokeFill,\n        strokeWidth: this.config.quadrantExternalBorderStrokeWidth,\n        x1: quadrantLeft + quadrantWidth,\n        y1: quadrantTop + halfExternalBorderWidth,\n        x2: quadrantLeft + quadrantWidth,\n        y2: quadrantTop + quadrantHeight - halfExternalBorderWidth\n      },\n      // bottom border\n      {\n        strokeFill: this.themeConfig.quadrantExternalBorderStrokeFill,\n        strokeWidth: this.config.quadrantExternalBorderStrokeWidth,\n        x1: quadrantLeft - halfExternalBorderWidth,\n        y1: quadrantTop + quadrantHeight,\n        x2: quadrantLeft + quadrantWidth + halfExternalBorderWidth,\n        y2: quadrantTop + quadrantHeight\n      },\n      // left border\n      {\n        strokeFill: this.themeConfig.quadrantExternalBorderStrokeFill,\n        strokeWidth: this.config.quadrantExternalBorderStrokeWidth,\n        x1: quadrantLeft,\n        y1: quadrantTop + halfExternalBorderWidth,\n        x2: quadrantLeft,\n        y2: quadrantTop + quadrantHeight - halfExternalBorderWidth\n      },\n      // vertical inner border\n      {\n        strokeFill: this.themeConfig.quadrantInternalBorderStrokeFill,\n        strokeWidth: this.config.quadrantInternalBorderStrokeWidth,\n        x1: quadrantLeft + quadrantHalfWidth,\n        y1: quadrantTop + halfExternalBorderWidth,\n        x2: quadrantLeft + quadrantHalfWidth,\n        y2: quadrantTop + quadrantHeight - halfExternalBorderWidth\n      },\n      // horizontal inner border\n      {\n        strokeFill: this.themeConfig.quadrantInternalBorderStrokeFill,\n        strokeWidth: this.config.quadrantInternalBorderStrokeWidth,\n        x1: quadrantLeft + halfExternalBorderWidth,\n        y1: quadrantTop + quadrantHalfHeight,\n        x2: quadrantLeft + quadrantWidth - halfExternalBorderWidth,\n        y2: quadrantTop + quadrantHalfHeight\n      }\n    ];\n    return borderLines;\n  }\n  getTitle(showTitle) {\n    if (showTitle) {\n      return {\n        text: this.data.titleText,\n        fill: this.themeConfig.quadrantTitleFill,\n        fontSize: this.config.titleFontSize,\n        horizontalPos: \"top\",\n        verticalPos: \"center\",\n        rotation: 0,\n        y: this.config.titlePadding,\n        x: this.config.chartWidth / 2\n      };\n    }\n    return;\n  }\n  build() {\n    const showXAxis = this.config.showXAxis && !!(this.data.xAxisLeftText || this.data.xAxisRightText);\n    const showYAxis = this.config.showYAxis && !!(this.data.yAxisTopText || this.data.yAxisBottomText);\n    const showTitle = this.config.showTitle && !!this.data.titleText;\n    const xAxisPosition = this.data.points.length > 0 ? \"bottom\" : this.config.xAxisPosition;\n    const calculatedSpace = this.calculateSpace(xAxisPosition, showXAxis, showYAxis, showTitle);\n    return {\n      points: this.getQuadrantPoints(calculatedSpace),\n      quadrants: this.getQuadrants(calculatedSpace),\n      axisLabels: this.getAxisLabels(xAxisPosition, showXAxis, showYAxis, calculatedSpace),\n      borderLines: this.getBorders(calculatedSpace),\n      title: this.getTitle(showTitle)\n    };\n  }\n}\nconst config = getConfig();\nfunction textSanitizer(text) {\n  return sanitizeText(text.trim(), config);\n}\nconst quadrantBuilder = new QuadrantBuilder();\nfunction setQuadrant1Text(textObj) {\n  quadrantBuilder.setData({ quadrant1Text: textSanitizer(textObj.text) });\n}\nfunction setQuadrant2Text(textObj) {\n  quadrantBuilder.setData({ quadrant2Text: textSanitizer(textObj.text) });\n}\nfunction setQuadrant3Text(textObj) {\n  quadrantBuilder.setData({ quadrant3Text: textSanitizer(textObj.text) });\n}\nfunction setQuadrant4Text(textObj) {\n  quadrantBuilder.setData({ quadrant4Text: textSanitizer(textObj.text) });\n}\nfunction setXAxisLeftText(textObj) {\n  quadrantBuilder.setData({ xAxisLeftText: textSanitizer(textObj.text) });\n}\nfunction setXAxisRightText(textObj) {\n  quadrantBuilder.setData({ xAxisRightText: textSanitizer(textObj.text) });\n}\nfunction setYAxisTopText(textObj) {\n  quadrantBuilder.setData({ yAxisTopText: textSanitizer(textObj.text) });\n}\nfunction setYAxisBottomText(textObj) {\n  quadrantBuilder.setData({ yAxisBottomText: textSanitizer(textObj.text) });\n}\nfunction addPoint(textObj, x, y) {\n  quadrantBuilder.addPoints([{ x, y, text: textSanitizer(textObj.text) }]);\n}\nfunction setWidth(width) {\n  quadrantBuilder.setConfig({ chartWidth: width });\n}\nfunction setHeight(height) {\n  quadrantBuilder.setConfig({ chartHeight: height });\n}\nfunction getQuadrantData() {\n  const config2 = getConfig();\n  const { themeVariables, quadrantChart: quadrantChartConfig } = config2;\n  if (quadrantChartConfig) {\n    quadrantBuilder.setConfig(quadrantChartConfig);\n  }\n  quadrantBuilder.setThemeConfig({\n    quadrant1Fill: themeVariables.quadrant1Fill,\n    quadrant2Fill: themeVariables.quadrant2Fill,\n    quadrant3Fill: themeVariables.quadrant3Fill,\n    quadrant4Fill: themeVariables.quadrant4Fill,\n    quadrant1TextFill: themeVariables.quadrant1TextFill,\n    quadrant2TextFill: themeVariables.quadrant2TextFill,\n    quadrant3TextFill: themeVariables.quadrant3TextFill,\n    quadrant4TextFill: themeVariables.quadrant4TextFill,\n    quadrantPointFill: themeVariables.quadrantPointFill,\n    quadrantPointTextFill: themeVariables.quadrantPointTextFill,\n    quadrantXAxisTextFill: themeVariables.quadrantXAxisTextFill,\n    quadrantYAxisTextFill: themeVariables.quadrantYAxisTextFill,\n    quadrantExternalBorderStrokeFill: themeVariables.quadrantExternalBorderStrokeFill,\n    quadrantInternalBorderStrokeFill: themeVariables.quadrantInternalBorderStrokeFill,\n    quadrantTitleFill: themeVariables.quadrantTitleFill\n  });\n  quadrantBuilder.setData({ titleText: getDiagramTitle() });\n  return quadrantBuilder.build();\n}\nconst clear = function() {\n  quadrantBuilder.clear();\n  clear$1();\n};\nconst db = {\n  setWidth,\n  setHeight,\n  setQuadrant1Text,\n  setQuadrant2Text,\n  setQuadrant3Text,\n  setQuadrant4Text,\n  setXAxisLeftText,\n  setXAxisRightText,\n  setYAxisTopText,\n  setYAxisBottomText,\n  addPoint,\n  getQuadrantData,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription\n};\nconst draw = (txt, id, _version, diagObj) => {\n  var _a, _b, _c;\n  function getDominantBaseLine(horizontalPos) {\n    return horizontalPos === \"top\" ? \"hanging\" : \"middle\";\n  }\n  function getTextAnchor(verticalPos) {\n    return verticalPos === \"left\" ? \"start\" : \"middle\";\n  }\n  function getTransformation(data) {\n    return `translate(${data.x}, ${data.y}) rotate(${data.rotation || 0})`;\n  }\n  const conf = getConfig();\n  log.debug(\"Rendering quadrant chart\\n\" + txt);\n  const securityLevel = conf.securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const group = svg.append(\"g\").attr(\"class\", \"main\");\n  const width = ((_a = conf.quadrantChart) == null ? void 0 : _a.chartWidth) || 500;\n  const height = ((_b = conf.quadrantChart) == null ? void 0 : _b.chartHeight) || 500;\n  configureSvgSize(svg, height, width, ((_c = conf.quadrantChart) == null ? void 0 : _c.useMaxWidth) || true);\n  svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height);\n  diagObj.db.setHeight(height);\n  diagObj.db.setWidth(width);\n  const quadrantData = diagObj.db.getQuadrantData();\n  const quadrantsGroup = group.append(\"g\").attr(\"class\", \"quadrants\");\n  const borderGroup = group.append(\"g\").attr(\"class\", \"border\");\n  const dataPointGroup = group.append(\"g\").attr(\"class\", \"data-points\");\n  const labelGroup = group.append(\"g\").attr(\"class\", \"labels\");\n  const titleGroup = group.append(\"g\").attr(\"class\", \"title\");\n  if (quadrantData.title) {\n    titleGroup.append(\"text\").attr(\"x\", 0).attr(\"y\", 0).attr(\"fill\", quadrantData.title.fill).attr(\"font-size\", quadrantData.title.fontSize).attr(\"dominant-baseline\", getDominantBaseLine(quadrantData.title.horizontalPos)).attr(\"text-anchor\", getTextAnchor(quadrantData.title.verticalPos)).attr(\"transform\", getTransformation(quadrantData.title)).text(quadrantData.title.text);\n  }\n  if (quadrantData.borderLines) {\n    borderGroup.selectAll(\"line\").data(quadrantData.borderLines).enter().append(\"line\").attr(\"x1\", (data) => data.x1).attr(\"y1\", (data) => data.y1).attr(\"x2\", (data) => data.x2).attr(\"y2\", (data) => data.y2).style(\"stroke\", (data) => data.strokeFill).style(\"stroke-width\", (data) => data.strokeWidth);\n  }\n  const quadrants = quadrantsGroup.selectAll(\"g.quadrant\").data(quadrantData.quadrants).enter().append(\"g\").attr(\"class\", \"quadrant\");\n  quadrants.append(\"rect\").attr(\"x\", (data) => data.x).attr(\"y\", (data) => data.y).attr(\"width\", (data) => data.width).attr(\"height\", (data) => data.height).attr(\"fill\", (data) => data.fill);\n  quadrants.append(\"text\").attr(\"x\", 0).attr(\"y\", 0).attr(\"fill\", (data) => data.text.fill).attr(\"font-size\", (data) => data.text.fontSize).attr(\n    \"dominant-baseline\",\n    (data) => getDominantBaseLine(data.text.horizontalPos)\n  ).attr(\"text-anchor\", (data) => getTextAnchor(data.text.verticalPos)).attr(\"transform\", (data) => getTransformation(data.text)).text((data) => data.text.text);\n  const labels = labelGroup.selectAll(\"g.label\").data(quadrantData.axisLabels).enter().append(\"g\").attr(\"class\", \"label\");\n  labels.append(\"text\").attr(\"x\", 0).attr(\"y\", 0).text((data) => data.text).attr(\"fill\", (data) => data.fill).attr(\"font-size\", (data) => data.fontSize).attr(\"dominant-baseline\", (data) => getDominantBaseLine(data.horizontalPos)).attr(\"text-anchor\", (data) => getTextAnchor(data.verticalPos)).attr(\"transform\", (data) => getTransformation(data));\n  const dataPoints = dataPointGroup.selectAll(\"g.data-point\").data(quadrantData.points).enter().append(\"g\").attr(\"class\", \"data-point\");\n  dataPoints.append(\"circle\").attr(\"cx\", (data) => data.x).attr(\"cy\", (data) => data.y).attr(\"r\", (data) => data.radius).attr(\"fill\", (data) => data.fill);\n  dataPoints.append(\"text\").attr(\"x\", 0).attr(\"y\", 0).text((data) => data.text.text).attr(\"fill\", (data) => data.text.fill).attr(\"font-size\", (data) => data.text.fontSize).attr(\n    \"dominant-baseline\",\n    (data) => getDominantBaseLine(data.text.horizontalPos)\n  ).attr(\"text-anchor\", (data) => getTextAnchor(data.text.verticalPos)).attr(\"transform\", (data) => getTransformation(data.text));\n};\nconst renderer = {\n  draw\n};\nconst diagram = {\n  parser: parser$1,\n  db,\n  renderer,\n  styles: () => \"\"\n};\nexport {\n  diagram\n};\n"]}
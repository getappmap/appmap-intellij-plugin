{"version":3,"sources":["../install-guide.js"],"names":[],"mappings":"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","file":"install-guide.js","sourcesContent":["import Vue from 'vue';\nimport {default as plugin, VInstallGuide} from '@appland/components';\nimport '@appland/diagrams/dist/style.css';\nimport MessagePublisher from 'messagePublisher';\nimport vscode from 'vsCodeBridge';\n\nfunction mountWebview() {\n  const messages = new MessagePublisher(vscode);\n\n  messages.on('init', (initialData) => {\n    let currentProject;\n\n    const app = new Vue({\n      el: '#app',\n      render(h) {\n        return h(VInstallGuide, {\n          ref: 'ui',\n          props: {\n            projects: this.projects,\n            editor: 'jetbrains',\n            analysisEnabled: this.analysisEnabled,\n            userAuthenticated: this.userAuthenticated,\n            featureFlags: new Set(['disable-record-pending']),\n            findingsEnabled: this.findingsEnabled,\n          },\n        });\n      },\n      data() {\n        return {\n          projects: initialData.projects,\n          analysisEnabled: initialData.analysisEnabled,\n          userAuthenticated: initialData.userAuthenticated,\n          findingsEnabled: initialData.findingsEnabled,\n        };\n      },\n      mounted() {\n        document.addEventListener('click', (e) => {\n          if (e && e.target) {\n            const href = e.target.href;\n            if (href && (href.startsWith(\"http://\") || href.startsWith(\"https://\"))) {\n              e.preventDefault();\n              vscode.postMessage({command: 'click-link', uri: e.target.href});\n              return false;\n            }\n          }\n        });\n      },\n    });\n\n    app.$on('clipboard', (text) => {\n      vscode.postMessage({\n        command: 'clipboard',\n        project: currentProject,\n        text,\n      });\n    });\n\n    app.$on('select-project', (project) => {\n      currentProject = project;\n    });\n\n    app.$on('open-navie', () => {\n      vscode.postMessage({command: 'open-navie'});\n    });\n\n    app.$on('open-findings-overview', () => {\n      vscode.postMessage({command: 'open-findings-overview'});\n    });\n\n    app.$on('openAppmap', (file) => {\n      vscode.postMessage({command: 'open-file', file});\n    });\n\n    app.$on('perform-install', (path, language) => {\n      vscode.postMessage({command: 'perform-install', path, language});\n    });\n\n    app.$on('generate-openapi', (projectPath) => {\n      messages.rpc('generate-openapi', {projectPath});\n    });\n\n    app.$on('perform-auth', () => {\n      vscode.postMessage({command: 'perform-auth'});\n    });\n\n    app.$on('submit-to-navie', (suggestion) => {\n      vscode.postMessage({command: 'submit-to-navie', suggestion});\n    });\n\n    // listeners for messages sent by the plugin\n    messages.on('projects', ({projects}) => {\n      app.projects = projects;\n      app.$forceUpdate();\n    });\n\n    messages.on('settings', ({userAuthenticated, analysisEnabled, findingsEnabled, projects}) => {\n      if (userAuthenticated !== undefined) {\n        app.userAuthenticated = userAuthenticated;\n      }\n      if (analysisEnabled !== undefined) {\n        app.analysisEnabled = analysisEnabled;\n      }\n      if (findingsEnabled !== undefined) {\n        app.findingsEnabled = findingsEnabled;\n      }\n      if (projects !== undefined) {\n        app.projects = projects;\n      }\n      app.$forceUpdate();\n    });\n  });\n\n  vscode.postMessage({command: 'ready'});\n}\n\nVue.use(plugin);\nmountWebview();"]}
{
  "configuration": {
    "checks": [
      {
        "rule": "authz-before-authn"
      },
      {
        "rule": "deprecated-crypto-algorithm"
      },
      {
        "rule": "deserialization-of-untrusted-data"
      },
      {
        "rule": "exec-of-untrusted-command"
      },
      {
        "rule": "http-500"
      },
      {
        "rule": "logout-without-session-reset"
      },
      {
        "rule": "missing-content-type"
      },
      {
        "rule": "n-plus-one-query"
      },
      {
        "rule": "secret-in-log"
      },
      {
        "rule": "too-many-joins"
      },
      {
        "rule": "too-many-updates"
      },
      {
        "rule": "unauthenticated-encryption"
      },
      {
        "rule": "update-in-get-request"
      }
    ],
    "timestampMs": 1692268179723
  },
  "appMapMetadata": {
    "/AppLand/sources/minitest-samples/failed_tests/tmp/appmap/failed_test_1.appmap.json": {
      "name": "Failed test 1",
      "source_location": "test/integration/failed_test_1.rb:66",
      "test_status": "failed"
    }
  },
  "findings": [
    {
      "appMapFile": "/AppLand/sources/minitest-samples/failed_tests/tmp/appmap/failed_test_1.appmap.json",
      "checkId": "update-in-get-request",
      "ruleId": "update-in-get-request",
      "ruleTitle": "Data update performed in GET or HEAD request",
      "event": {
        "id": 226,
        "event": "call",
        "thread_id": 5140,
        "sql_query": {
          "sql": "UPDATE \"users\" SET \"updated_at\" = ?, \"activated\" = ? WHERE \"users\".\"id\" = ?",
          "database_type": "sqlite"
        }
      },
      "hash": "cf9f6733d5220ea1c7df4026ab25a10072e366817a42ca0d4641871871a797d8",
      "hash_v2": "642657a7e04966320b8bbc4d6bede9e0a59b57cc3e2d250dda8e34219dc65349",
      "stack": [
        "app/models/user.rb:60",
        "app/controllers/account_activations_controller.rb:3"
      ],
      "scope": {
        "id": 189,
        "event": "call",
        "thread_id": 5140,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Version": "HTTP/1.0",
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "user@example.com",
            "object_id": 112500
          }
        ]
      },
      "message": "Data update performed in HTTP request GET /account_activations/{id}/edit: UPDATE \"users\" SET \"updated_at\" = ?, \"activated\" = ? WHERE \"users\".\"id\" = ?",
      "relatedEvents": [
        {
          "id": 226,
          "event": "call",
          "thread_id": 5140,
          "sql_query": {
            "sql": "UPDATE \"users\" SET \"updated_at\" = ?, \"activated\" = ? WHERE \"users\".\"id\" = ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 189,
          "event": "call",
          "thread_id": 5140,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Version": "HTTP/1.0",
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 112500
            }
          ]
        }
      ],
      "impactDomain": "Maintainability",
      "participatingEvents": {
        "request": {
          "id": 189,
          "event": "call",
          "thread_id": 5140,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Version": "HTTP/1.0",
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 112500
            }
          ]
        }
      },
      "scopeModifiedDate": "2022-04-12T14:25:33.000Z",
      "eventsModifiedDate": "2022-04-12T14:25:33.000Z"
    },
    {
      "appMapFile": "/AppLand/sources/minitest-samples/failed_tests/tmp/appmap/failed_test_1.appmap.json",
      "checkId": "update-in-get-request",
      "ruleId": "update-in-get-request",
      "ruleTitle": "Data update performed in GET or HEAD request",
      "event": {
        "id": 250,
        "event": "call",
        "thread_id": 5140,
        "sql_query": {
          "sql": "UPDATE \"users\" SET \"updated_at\" = ?, \"activated_at\" = ? WHERE \"users\".\"id\" = ?",
          "database_type": "sqlite"
        }
      },
      "hash": "60031256ab72237f92296fefba2733dc85d36c4bf7f5f31a558286117ca66e43",
      "hash_v2": "658ae11b09e7468e908d16617a59850a27d225fe1aa75ded50c2700f8398c80b",
      "stack": [
        "app/models/user.rb:60",
        "app/controllers/account_activations_controller.rb:3"
      ],
      "scope": {
        "id": 189,
        "event": "call",
        "thread_id": 5140,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Version": "HTTP/1.0",
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "user@example.com",
            "object_id": 112500
          }
        ]
      },
      "message": "Data update performed in HTTP request GET /account_activations/{id}/edit: UPDATE \"users\" SET \"updated_at\" = ?, \"activated_at\" = ? WHERE \"users\".\"id\" = ?",
      "relatedEvents": [
        {
          "id": 250,
          "event": "call",
          "thread_id": 5140,
          "sql_query": {
            "sql": "UPDATE \"users\" SET \"updated_at\" = ?, \"activated_at\" = ? WHERE \"users\".\"id\" = ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 189,
          "event": "call",
          "thread_id": 5140,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Version": "HTTP/1.0",
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 112500
            }
          ]
        }
      ],
      "impactDomain": "Maintainability",
      "participatingEvents": {
        "request": {
          "id": 189,
          "event": "call",
          "thread_id": 5140,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Version": "HTTP/1.0",
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 112500
            }
          ]
        }
      },
      "scopeModifiedDate": "2022-04-12T14:25:33.000Z",
      "eventsModifiedDate": "2022-04-12T14:25:33.000Z"
    },
    {
      "appMapFile": "/AppLand/sources/minitest-samples/failed_tests/tmp/appmap/failed_test_1.appmap.json",
      "checkId": "update-in-get-request",
      "ruleId": "update-in-get-request",
      "ruleTitle": "Data update performed in GET or HEAD request",
      "event": {
        "id": 320,
        "event": "call",
        "thread_id": 5140,
        "sql_query": {
          "sql": "UPDATE \"users\" SET \"updated_at\" = ?, \"remember_digest\" = ? WHERE \"users\".\"id\" = ?",
          "database_type": "sqlite"
        }
      },
      "hash": "c85020d99d94069ce7d36ee603e8c60d882223f8d477fde80125b6c3ac25ed8f",
      "hash_v2": "007b87e00b936cd816c792b758ab9da036507f899079c2395c9f6816158fd380",
      "stack": [
        "app/models/user.rb:35",
        "app/models/user.rb:43",
        "app/helpers/sessions_helper.rb:4",
        "app/controllers/account_activations_controller.rb:3"
      ],
      "scope": {
        "id": 189,
        "event": "call",
        "thread_id": 5140,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Version": "HTTP/1.0",
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "user@example.com",
            "object_id": 112500
          }
        ]
      },
      "message": "Data update performed in HTTP request GET /account_activations/{id}/edit: UPDATE \"users\" SET \"updated_at\" = ?, \"remember_digest\" = ? WHERE \"users\".\"id\" = ?",
      "relatedEvents": [
        {
          "id": 320,
          "event": "call",
          "thread_id": 5140,
          "sql_query": {
            "sql": "UPDATE \"users\" SET \"updated_at\" = ?, \"remember_digest\" = ? WHERE \"users\".\"id\" = ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 189,
          "event": "call",
          "thread_id": 5140,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Version": "HTTP/1.0",
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 112500
            }
          ]
        }
      ],
      "impactDomain": "Maintainability",
      "participatingEvents": {
        "request": {
          "id": 189,
          "event": "call",
          "thread_id": 5140,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/h1etiBvmn7muT8mrxWde7Q/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Version": "HTTP/1.0",
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=p8oeTMkr0eqIkzE3ZO1nuw%2FpYigbcaWTgjSArlup6m2vLdAwvVbY%2BYMAZPfHRmKLjhxQRWKl1QgoeXF4kghkdGDAqgd9PkM%2FL7JnzkTTYFwUqFHAdn6ppsggYep%2BW8ocxDwpi6pj3cSybyEgD%2BvHY3eTeQVgL7SoubIRPAkYW0W8kQCEu8URATKDOq3I%2Bqurrk073wLc650kDhIqak8blXoRmSGdE%2FNkrKj9A8ODS5AeiZdEkoSr%2F0ZV9fq17lJWR78Kk4q0ndK4RsnLM7QmICuVeNbIY9eCbX2DuWHJOmEgIlaDlxxzjfrP1gal8mX%2FzToPrw2q38bD7R8EoHU30sBwPs1ESK8%3D--mpMWcEOxoxz3ItYp--ikTuJYi340AfPeg%2F6sCW%2Fg%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 112500
            }
          ]
        }
      },
      "scopeModifiedDate": "2022-04-12T14:25:33.000Z",
      "eventsModifiedDate": "2022-04-12T14:25:33.000Z"
    }
  ],
  "checks": [
    {
      "rule": {
        "id": "authz-before-authn",
        "title": "Authorization performed before authentication",
        "labels": [
          "security.authorization",
          "security.authentication"
        ],
        "scope": "http_server_request",
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-863": "https://cwe.mitre.org/data/definitions/863.html"
        },
        "description": "Determines when authorization logic is applied to a user identity that has not been properly verified. Because the the user's identity has not been verified yet, the outcome of the authorization check cannot be trusted. A malicious user might be able to get themselves authorized as a different user than they really are - or they may not be logged in at all.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#authz-before-authn"
      },
      "id": "authz-before-authn",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "deprecated-crypto-algorithm",
        "title": "Deprecated cryptographic algorithm",
        "description": "---\nrule: deprecated-crypto-algorithm\nname: Deprecated crypto algorithm\ntitle: Deprecated cryptographic algorithm\nreferences:\n  A02:2021: https://owasp.org/Top10/A02_2021-Cryptographic_Failures/\nimpactDomain: Security\nlabels:\n  - crypto.encrypt\n  - crypto.decrypt\n  - crypto.digest\nscope: root\n---\n\nEnsure that cryptographic operations do not use deprecated algorithms.\n",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deprecated-crypto-algorithm",
        "labels": [
          "crypto.encrypt",
          "crypto.decrypt",
          "crypto.digest"
        ],
        "scope": "root",
        "enumerateScope": true,
        "impactDomain": "Security",
        "references": {
          "A02:2021": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
        }
      },
      "id": "deprecated-crypto-algorithm",
      "options": {},
      "scope": "root",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "deserialization-of-untrusted-data",
        "title": "Deserialization of untrusted data",
        "labels": [
          "deserialize.unsafe",
          "deserialize.safe",
          "deserialize.sanitize"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "scope": "http_server_request",
        "references": {
          "CWE-502": "https://cwe.mitre.org/data/definitions/502.html",
          "Ruby Security": "https://docs.ruby-lang.org/en/3.0/doc/security_rdoc.html"
        },
        "description": "Finds occurrances of deserialization in which the mechanism employed is known to be unsafe, and the data comes from an untrusted source and hasn't passed through a sanitization mechanism.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deserialization-of-untrusted-data"
      },
      "id": "deserialization-of-untrusted-data",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "exec-of-untrusted-command",
        "title": "Execution of untrusted system command",
        "labels": [
          "system.exec",
          "system.exec.safe",
          "system.exec.sanitize"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-78": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "description": "Find occurrances of system command execution in which the command string is not guaranteed to be safe.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#exec-of-untrusted-command"
      },
      "id": "exec-of-untrusted-command",
      "options": {},
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "http-500",
        "title": "HTTP 500 status code",
        "description": "Identifies when an HTTP server request has returned a 500 status code. HTTP 500 status code generally indicate an unanticipated problem in the backend that is not handled in a predictable way. 500 status codes are also hard for client code to handle, because they don't indicate any particular problem or suggest a solution.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#http-500",
        "labels": [],
        "scope": "http_server_request",
        "enumerateScope": false,
        "impactDomain": "Stability",
        "references": {
          "CWE-392": "https://cwe.mitre.org/data/definitions/392.html"
        }
      },
      "id": "http-500",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Stability"
    },
    {
      "rule": {
        "id": "logout-without-session-reset",
        "title": "Logout without session reset",
        "scope": "http_server_request",
        "labels": [
          "http.session.clear",
          "security.logout"
        ],
        "impactDomain": "Security",
        "enumerateScope": false,
        "references": {
          "CWE-488": "https://cwe.mitre.org/data/definitions/488.html",
          "OWASP - Session fixation": "https://owasp.org/www-community/attacks/Session_fixation",
          "Ruby on Rails - Session fixation countermeasures": "https://guides.rubyonrails.org/security.html#session-fixation-countermeasures"
        },
        "description": "Determines when a user has been logged out from the application, but the session hasn't been cleared. When the session isn't cleared after logout, the session is vulnerable to a [session fixation attack](https://owasp.org/www-community/attacks/Session_fixation).",
        "url": "https://appland.com/docs/analysis/rules-reference.html#logout-without-session-reset"
      },
      "id": "logout-without-session-reset",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "missing-content-type",
        "title": "HTTP server request without a Content-Type header",
        "scope": "http_server_request",
        "impactDomain": "Stability",
        "enumerateScope": false,
        "description": "Finds HTTP server requests that don't provide a `Content-Type` header in the response.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#missing-content-type"
      },
      "id": "missing-content-type",
      "options": {},
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Stability"
    },
    {
      "rule": {
        "id": "n-plus-one-query",
        "title": "N plus 1 SQL query",
        "scope": "command",
        "impactDomain": "Performance",
        "enumerateScope": false,
        "references": {
          "CWE-1073": "https://cwe.mitre.org/data/definitions/1073.html"
        },
        "description": "Finds occurrences of a query being repeated within a loop.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#n-plus-one-query"
      },
      "id": "n-plus-one-query",
      "options": {
        "warningLimit": 5,
        "errorLimit": 10
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Performance"
    },
    {
      "rule": {
        "id": "secret-in-log",
        "title": "Secret in log",
        "labels": [
          "secret",
          "log"
        ],
        "scope": "root",
        "impactDomain": "Security",
        "enumerateScope": true,
        "references": {
          "CWE-532": "https://cwe.mitre.org/data/definitions/532.html"
        },
        "description": "Identifies when a known or assumed secret is written to a log. Logs are often transported into other systems that are treated with lesser security - such as backups. Therefore, secrets written into log files are more likely to be leaked or discovered by cyber-attackers.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#secret-in-log"
      },
      "id": "secret-in-log",
      "options": {},
      "scope": "root",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "too-many-joins",
        "title": "Too many joins",
        "description": "Verifies that the number of joins in SQL queries does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-joins",
        "labels": [],
        "enumerateScope": false,
        "impactDomain": "Performance",
        "references": {
          "CWE-1049": "https://cwe.mitre.org/data/definitions/1049.html"
        }
      },
      "id": "too-many-joins",
      "options": {
        "warningLimit": 5,
        "excludeTables": [
          {
            "match": {},
            "ignoreCase": false
          },
          {
            "equal": "information_schema",
            "ignoreCase": false
          }
        ]
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Performance"
    },
    {
      "rule": {
        "id": "too-many-updates",
        "title": "Too many SQL and RPC updates performed in one command",
        "scope": "command",
        "enumerateScope": false,
        "impactDomain": "Maintainability",
        "references": {
          "CWE-1048": "https://cwe.mitre.org/data/definitions/1048.html"
        },
        "description": "Verifies that the number of SQL and RPC updates performed by a command does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-updates"
      },
      "id": "too-many-updates",
      "options": {
        "warningLimit": 20
      },
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Maintainability"
    },
    {
      "rule": {
        "id": "unauthenticated-encryption",
        "title": "Unauthenticated encryption",
        "description": "Ensures that encryption operations use authenticated encryption.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#unauthenticated-encryption",
        "labels": [
          "crypto.encrypt",
          "crypto.set_auth_data"
        ],
        "enumerateScope": true,
        "impactDomain": "Security",
        "references": {
          "A02:2021": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
        }
      },
      "id": "unauthenticated-encryption",
      "options": {},
      "scope": "command",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Security"
    },
    {
      "rule": {
        "id": "update-in-get-request",
        "title": "Data update performed in GET or HEAD request",
        "scope": "http_server_request",
        "enumerateScope": true,
        "labels": [
          "audit"
        ],
        "impactDomain": "Maintainability",
        "description": "Finds SQL updates that are performed in an HTTP server `GET` request.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#update-in-get-request"
      },
      "id": "update-in-get-request",
      "options": {
        "_queryInclude": [
          {},
          {}
        ],
        "_queryExclude": []
      },
      "scope": "http_server_request",
      "includeScope": [],
      "excludeScope": [],
      "includeEvent": [],
      "excludeEvent": [],
      "impactDomain": "Maintainability"
    }
  ],
  "summary": {
    "numAppMaps": 1,
    "numChecks": 13,
    "rules": [
      "authz-before-authn",
      "deprecated-crypto-algorithm",
      "deserialization-of-untrusted-data",
      "exec-of-untrusted-command",
      "http-500",
      "logout-without-session-reset",
      "missing-content-type",
      "n-plus-one-query",
      "secret-in-log",
      "too-many-joins",
      "too-many-updates",
      "unauthenticated-encryption",
      "update-in-get-request"
    ],
    "ruleLabels": [
      "audit",
      "crypto.decrypt",
      "crypto.digest",
      "crypto.encrypt",
      "crypto.set_auth_data",
      "deserialize.safe",
      "deserialize.sanitize",
      "deserialize.unsafe",
      "http.session.clear",
      "log",
      "secret",
      "security.authentication",
      "security.authorization",
      "security.logout",
      "system.exec",
      "system.exec.safe",
      "system.exec.sanitize"
    ],
    "numFindings": 3,
    "appMapMetadata": {
      "labels": [],
      "apps": [
        "rails_tutorial_sample_app_7th_ed"
      ],
      "clients": [
        {
          "name": "appmap",
          "url": "https://github.com/applandinc/appmap-ruby",
          "version": "0.99.4"
        }
      ],
      "frameworks": [
        {
          "name": "rails",
          "version": "7.0.4"
        },
        {
          "name": "minitest",
          "version": "5.15.0"
        }
      ],
      "git": [
        {
          "repository": "https://github.com/land-of-apps/rails_tutorial_sample_app_7th_ed",
          "branch": "HEAD",
          "commit": "116e02ca5e41731c0fe11f0424ed5ec92acfcbb0",
          "git_last_annotated_tag": null,
          "git_last_tag": null,
          "git_commits_since_last_annotated_tag": null,
          "git_commits_since_last_tag": null
        }
      ],
      "languages": [
        {
          "name": "ruby",
          "engine": "ruby",
          "version": "3.1.2"
        }
      ],
      "recorders": [
        {
          "name": "minitest",
          "type": "tests"
        }
      ],
      "testStatuses": [],
      "exceptions": []
    }
  }
}